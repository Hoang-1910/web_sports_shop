services:
    # 1. Laravel PHP App
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - laravel
        depends_on:
            - db
            - redis

    # 2. Nginx web server
    nginx:
        image: nginx:alpine
        container_name: nginx_server
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel

    # 3. MySQL database
    db:
        image: mysql:8
        container_name: mysql_db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: web_sports_shop
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: laravel
            MYSQL_PASSWORD: secret
        volumes:
            - db_data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - laravel

    # 4. Redis
    redis:
        image: redis:alpine
        container_name: redis_server
        ports:
            - "6379:6379"
        networks:
            - laravel

    # 5. Laravel Queue Worker
    queue-worker:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: queue_worker
        command: php artisan queue:work
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - laravel

    # 6. Laravel Scheduler
    scheduler:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: scheduler
        command: sh -c "while true; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"
        volumes:
            - ./:/var/www
        networks:
            - laravel

    # 7. Mailhog
    mailhog:
        image: mailhog/mailhog
        container_name: mailhog
        ports:
            - "8025:8025"
        networks:
            - laravel

    # 8. phpMyAdmin
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            PMA_HOST: db
        ports:
            - "8081:80"
        depends_on:
            - db
        networks:
            - laravel

volumes:
    db_data:

networks:
    laravel:
        driver: bridge
